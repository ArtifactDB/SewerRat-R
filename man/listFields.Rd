% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listFields.R
\name{listFields}
\alias{listFields}
\title{List metadata fields}
\usage{
listFields(
  url,
  pattern = NULL,
  count = FALSE,
  number = 1000,
  on.truncation = c("message", "warning", "none")
)
}
\arguments{
\item{url}{String containing the URL to the SewerRat REST API.}

\item{pattern}{String specifying a pattern for filtering fields, using the usual \code{*} and \code{?} wildcards.
Only fields matching to the pattern will be returned. 
If \code{NULL}, no filtering is performed.}

\item{count}{Logical scalar indicating whether to count the number of metadata files associated with each field.}

\item{number}{Integer specifying the maximum number of results to return.
This can also be \code{Inf} to return all results.}

\item{on.truncation}{String specifying what to do when the number of results exceeds \code{number}.
Either \code{"warning"}, \code{"message"}, or \code{"none"}.}
}
\value{
List of named lists, where each inner list corresponds to a field and contains:
\itemize{
\item \code{field}, string containing the field.
\item \code{count}, integer scalar specifying the number of files associated with the field.
This is only present if \code{count=TRUE} in the arguments.
}
}
\description{
List all known metadata fields in the SewerRat database.
}
\examples{
# Starting up an example SewerRat service:
info <- startSewerRat()

# Mocking up a directory of stuff to query.
mydir <- tempfile()
dir.create(mydir)
write(file=file.path(mydir, "metadata.json"), '{ "first": "Aaron", "last": "Lun" }')
dir.create(file.path(mydir, "diet"))
write(file=file.path(mydir, "diet", "metadata.json"), 
   '{ "meal": "lunch", "ingredients": "water" }')

# Registering it:
register(mydir, "metadata.json", url=info$url)

# Pulling out all the fields.
listFields(info$url)
listFields(info$url, pattern="fir*")
listFields(info$url, count=TRUE)

}
