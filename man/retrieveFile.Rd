% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/retrieveFile.R
\name{retrieveFile}
\alias{retrieveFile}
\title{Retrieve a single file}
\usage{
retrieveFile(path, url, cache = NULL, forceRemote = FALSE, overwrite = FALSE)
}
\arguments{
\item{path}{String containing the absolute path to a file in a registered directory.}

\item{url}{String containing the URL to the SewerRat REST API.}

\item{cache}{String containing a path to a cache directory.
If \code{NULL}, an appropriate location is automatically chosen.
Only used for remote access.}

\item{forceRemote}{Logical scalar indicating whether to force remote access.
This will download \code{path} via the REST API and cache it locally,
even if \code{path} is on the same filesystem as the caller.}

\item{overwrite}{Logical scalar indicating whether to overwrite the existing cache.
Only used for remote access.}
}
\value{
String containing the path to the file on the caller's filesystem.
}
\description{
Retrieve the path to a single file in a registered directory. 
This will call the REST API if the caller is not on the same filesystem as the registry.
}
\examples{
info <- startSewerRat()

# Mocking up a directory of stuff to query.
mydir <- tempfile()
dir.create(mydir)
write(file=file.path(mydir, "foo"), '{ "first": "Aaron", "last": "Lun" }')
dir.create(file.path(mydir, "diet"))
write(file=file.path(mydir, "diet", "bar"), 
   '{ "meal": "lunch", "ingredients": "water" }')

# Registering it:
register(mydir, "metadata.json", url=info$url)

# Fetching it, either directly or via the API.
retrieveFile(paste0(mydir, "/foo"), url=info$url)
retrieveFile(paste0(mydir, "/diet/bar"), url=info$url, forceRemote=TRUE)

}
\author{
Aaron Lun
}
