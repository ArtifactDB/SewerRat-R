% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listRegisteredDirectories.R
\name{listRegisteredDirectories}
\alias{listRegisteredDirectories}
\title{List registered directories}
\usage{
listRegisteredDirectories(
  url,
  user = NULL,
  contains = NULL,
  prefix = NULL,
  within = NULL,
  exists = NULL
)
}
\arguments{
\item{url}{String containing the URL of the SewerRat REST API.}

\item{user}{String containing the name of a user.
If not \code{NULL}, results are filtered to directories registered by this user.
If \code{TRUE}, this is set to the current user.}

\item{contains}{String containing an absolute path.
If not \code{NULL}, results are filtered to directories that contain this path.}

\item{prefix}{String containing an absolute path or a prefix thereof.
If not \code{NULL}, results are filtered to directories that start with this string.
This is soft-deprecated and users should prefer to use \code{within}.}

\item{within}{String containing an absolute path.
If not \code{NULL}, results are filtered to directories that are equal to or lie within this path.}

\item{exists}{Logical scalar indicating whether to only report directories that exist on the filesystem.
If \code{FALSE}, only non-existent directories are reported, and if \code{NULL}, no filtering is applied based on existence.}
}
\value{
List of named lists, where each inner list corresponds to a registered directory and contains:
\itemize{
\item \code{path}, string containing a path to the directory.
\item \code{user}, string containing the name of the user who registered this directory.
\item \code{time}, numeric scalar specifying the the Unix epoch time when this directory was registered.
\item \code{names}, a character vector containing the base names of the JSON files to be indexed.
}
}
\description{
List the directories that were registered in SewerRat.
}
\examples{
# Starting up an example SewerRat service:
info <- startSewerRat()

# Mocking up a directory of stuff to query.
mydir <- tempfile()
dir.create(mydir)
write(file=file.path(mydir, "metadata.json"), '{ "first": "Aaron", "last": "Lun" }')
dir.create(file.path(mydir, "diet"))
write(file=file.path(mydir, "diet", "metadata.json"), 
   '{ "meal": "lunch", "ingredients": "water" }')

# Registering it:
register(mydir, "metadata.json", url=info$url)

# List the registered directories:
listRegisteredDirectories(url=info$url)
listRegisteredDirectories(url=info$url, user=TRUE)

}
\author{
Aaron Lun
}
